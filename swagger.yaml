swagger: '2.0'
info:
  version: '1.0'
  title: POST-API
  contact:
    email: oojoseph67@gmail.com
    name: Joseph
    url: https://github.com/oojoseph67/
host: megaexe-prescreening.onrender.com
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/register:
    post:
      summary: Register User
      tags:
        - Auth
      operationId: RegisterUser
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/RegisterRequest'
      responses:
        '201':
          description: ''
          headers: {}
  /auth/login:
    post:
      summary: Login User
      tags:
        - Auth
      operationId: LoginUser
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /users/{id}:
    get:
      summary: Get User by ID
      tags:
        - User
      operationId: GetUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /post:
    get:
      summary: Get All Posts
      tags:
        - Post
      operationId: GetAllPosts
      produces:
        - application/json
      parameters:
        - name: sort
          in: query
          required: false
          type: string
          enum: [time, upvotes]
          description: Sort posts by time or upvotes
      responses:
        '200':
          description: ''
          headers: {}
    post:
      summary: Create Post
      tags:
        - Post
      operationId: CreatePost
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CreatePostRequest'
      responses:
        '201':
          description: ''
          headers: {}
      security:
        - Bearer: []
  /post/{id}:
    patch:
      summary: Edit Post
      tags:
        - Post
      operationId: EditPost
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: ''
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/EditPostRequest'
      responses:
        '200':
          description: ''
          headers: {}
      security:
        - Bearer: []
    delete:
      summary: Delete Post
      tags:
        - Post
      operationId: DeletePost
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          headers: {}
      security:
        - Bearer: []
  /post/{id}/upvote:
    post:
      summary: Upvote Post
      tags:
        - Post
      operationId: UpvotePost
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          headers: {}
      security:
        - Bearer: []
  /post/{id}/downvote:
    post:
      summary: Downvote Post
      tags:
        - Post
      operationId: DownvotePost
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          headers: {}
      security:
        - Bearer: []
  /comment:
    post:
      summary: Add Comment
      tags:
        - Comment
      operationId: AddComment
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/AddCommentRequest'
      responses:
        '201':
          description: ''
          headers: {}
      security:
        - Bearer: []
  /comment/{postId}:
    get:
      summary: Get Comments
      tags:
        - Comment
      operationId: GetComments
      produces:
        - application/json
      parameters:
        - name: postId
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          headers: {}
definitions:
  RegisterRequest:
    title: RegisterRequest
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - username
      - email
      - password
  LoginRequest:
    title: LoginRequest
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  CreatePostRequest:
    title: CreatePostRequest
    type: object
    properties:
      image:
        type: string
      content:
        type: string
      category:
        type: string
    required:
      - image
      - content
      - category
  EditPostRequest:
    title: EditPostRequest
    type: object
    properties:
      content:
        type: string
      image:
        type: string
      category:
        type: string
    required:
      - content
      - image
      - category
  AddCommentRequest:
    title: AddCommentRequest
    type: object
    properties:
      postId:
        type: string
      content:
        type: string
    required:
      - postId
      - content
